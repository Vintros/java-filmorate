DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS genre CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS likes CASCADE;

CREATE TABLE IF NOT EXISTS mpa
(
    mpa_id bigint PRIMARY KEY,
    name   text
);

CREATE TABLE IF NOT EXISTS films
(
    film_id      bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         text         NOT NULL,
    description  varchar(200) NOT NULL,
    release_date date         NOT NULL,
    duration     bigint       NOT NULL,
    mpa_id       integer REFERENCES mpa (mpa_id)
);

CREATE TABLE IF NOT EXISTS genre
(
    genre_id bigint PRIMARY KEY,
    name     text
);

CREATE TABLE IF NOT EXISTS genres
(
    film_id  bigint REFERENCES films (film_id),
    genre_id integer REFERENCES genre (genre_id),
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users
(
    user_id  bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     text,
    email    text,
    login    text,
    birthday text
);

CREATE TABLE IF NOT EXISTS friends
(
    friendship_request bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id            bigint REFERENCES users (user_id),
    friend_user_id     bigint REFERENCES users (user_id)
);

CREATE TABLE IF NOT EXISTS likes
(
    film_id bigint REFERENCES films (film_id),
    user_id bigint REFERENCES users (user_id),
    PRIMARY KEY (film_id, user_id)
);

MERGE INTO mpa (mpa_id, name)
    VALUES (1, 'G'),
           (2, 'PG'),
           (3, 'PG-13'),
           (4, 'R'),
           (5, 'NC-17');

MERGE INTO genre (genre_id, name)
    VALUES (1, 'Комедия'),
           (2, 'Драма'),
           (3, 'Мультфильм'),
           (4, 'Триллер'),
           (5, 'Документальный'),
           (6, 'Боевик');